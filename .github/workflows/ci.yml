name: ci

on:
  pull_request:
  push:
    branches: [main]
    tags: ["v*.*.*"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  lint_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Server
      - uses: actions/setup-go@v5
        with: { go-version: "1.25.1" }
      - name: Go deps, vet, test
        working-directory: server
        run: |
          go mod download
          go vet ./...
          go test ./...

      # Web
      - uses: actions/setup-node@v4
        with:
          {
            node-version: "20",
            cache: "npm",
            cache-dependency-path: "web/package-lock.json",
          }
      - name: Web deps, typecheck, lint, test
        working-directory: web
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8080
          API_PROXY_TARGET: http://localhost:8080
          CORS_ALLOWED_ORIGIN: http://localhost:8081
          NEXT_PUBLIC_API_MODE: mock
          CI: "1"
        run: |
          npm ci
          npm run format --if-present
          npm run typecheck --if-present
          npm run lint --if-present
          npm test --if-present
          npm run test:e2e --if-present

      # Mobile
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: "stable"
      - name: Flutter deps, analyze, test
        working-directory: mobile
        run: echo "TODO"

  build:
    needs: lint_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build server binary and image
      - uses: actions/setup-go@v5
        with: { go-version: "1.25.1" }
      - name: Build server
        working-directory: server
        run: |
          go build -o bin/server ./cmd/server
      - name: Docker build server
        run: docker build -t local/server:ci ./server

      # Build web app and image
      - uses: actions/setup-node@v4
        with:
          {
            node-version: "20",
            cache: "npm",
            cache-dependency-path: "web/package-lock.json",
          }
      - name: Build web
        working-directory: web
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8080
          API_PROXY_TARGET: http://localhost:8080
          CORS_ALLOWED_ORIGIN: http://localhost:8081
          NEXT_PUBLIC_API_MODE: live
        run: |
          npm ci
          npm run build
      - name: Docker build web
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=http://localhost:8080 \
            --build-arg API_PROXY_TARGET=http://server:8080 \
            --build-arg CORS_ALLOWED_ORIGIN=http://localhost:8081 \
            --build-arg NEXT_PUBLIC_API_MODE=live \
            -t local/web:ci ./web

      # Build Flutter APK
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: "stable"
      - name: Build Flutter APK
        working-directory: mobile
        run: |
          flutter pub get
          flutter build apk --release
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: client.apk
          path: mobile/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: client.apk
          path: dist
      - uses: softprops/action-gh-release@v2
        with:
          files: dist/app-release.apk
          generate_release_notes: true
