app:
  name: AREA Server
  environment: development
  baseURL: http://localhost:8080

server:
  http:
    host: 0.0.0.0
    port: 8080
    readTimeout: 15s
    writeTimeout: 15s
    idleTimeout: 60s
    cors:
      allowedOrigins:
        - http://localhost:8081
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowedHeaders:
        - Authorization
        - Content-Type
      allowCredentials: true
  telemetry:
    tracing:
      enabled: true
      exporter: otlp
      endpoint: http://localhost:4317
    metrics:
      enabled: true
      exporter: prometheus
      endpoint: :9464
    samplingRatio: 0.2

database:
  driver: postgres
  host: localhost
  port: 5432
  name: area
  userEnv: DATABASE_USER
  passwordEnv: DATABASE_PASSWORD
  dsnEnv: DATABASE_URL
  sslMode: disable
  maxOpenConns: 25
  maxIdleConns: 25
  connMaxLifetime: 30m
  connMaxIdleTime: 10m

logging:
  level: info
  format: text
  includeCaller: false
  defaultFields:
    service: area-server

queue:
  driver: redis
  redis:
    addr: localhost:6379
    db: 0
    passwordEnv: REDIS_PASSWORD
    consumerGroup: area-workers
    stream: area-jobs

notifier:
  webhook:
    timeout: 10s
    maxRetries: 5
    retryBackoff: 2s
  mailer:
    provider: sendgrid
    fromEmail: noreply@area.local
    sandboxMode: true
    apiKeyEnv: SENDGRID_API_KEY

secrets:
  provider: dotenv
  path: .env

oauth:
  allowedProviders:
    - google
    - github
    - gitlab
    - dropbox
    - slack
    - zoom
  providers:
    google:
      clientIDEnv: GOOGLE_OAUTH_CLIENT_ID
      clientSecretEnv: GOOGLE_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes:
        - email
        - profile
        - https://www.googleapis.com/auth/gmail.send
    github:
      clientIDEnv: GITHUB_OAUTH_CLIENT_ID
      clientSecretEnv: GITHUB_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes:
        - read:user
        - user:email
        - repo
    gitlab:
      clientIDEnv: GITLAB_OAUTH_CLIENT_ID
      clientSecretEnv: GITLAB_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes:
        - read_user
        - api
    dropbox:
      clientIDEnv: DROPBOX_OAUTH_CLIENT_ID
      clientSecretEnv: DROPBOX_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes:
        - account_info.read
        - files.metadata.read
        - files.metadata.write
        - files.content.write
    slack:
      clientIDEnv: SLACK_OAUTH_CLIENT_ID
      clientSecretEnv: SLACK_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes:
        - chat:write
        - channels:history
        - groups:history
        - im:history
        - mpim:history
        - users:read
    zoom:
      clientIDEnv: ZOOM_OAUTH_CLIENT_ID
      clientSecretEnv: ZOOM_OAUTH_CLIENT_SECRET
      redirectURI: http://localhost:3000/oauth/callback
      scopes: []

security:
  jwt:
    issuer: area-api
    accessTokenTTL: 15m
    refreshTokenTTL: 720h
    accessSecretEnv: JWT_ACCESS_SECRET
    refreshSecretEnv: JWT_REFRESH_SECRET
  password:
    minLength: 12
    pepperEnv: PASSWORD_PEPPER
  sessions:
    cookieName: area_session
    domain: ""
    path: /
    secure: false
    httpOnly: true
    sameSite: lax
    ttl: 168h
  verification:
    tokenTTL: 48h
  encryption:
    identitiesKeyEnv: IDENTITY_ENCRYPTION_KEY

servicesCatalog:
  refreshInterval: 5m
  bootstrapFile: ""
